//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.netTCPServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChatContent {
            get {
                return this.ChatContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatContentField, value) != true)) {
                    this.ChatContentField = value;
                    this.RaisePropertyChanged("ChatContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientFile", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
    [System.SerializableAttribute()]
    public partial class ClientFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BufferSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BytesReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isFinsishFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Buffer {
            get {
                return this.BufferField;
            }
            set {
                if ((object.ReferenceEquals(this.BufferField, value) != true)) {
                    this.BufferField = value;
                    this.RaisePropertyChanged("Buffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BufferSize {
            get {
                return this.BufferSizeField;
            }
            set {
                if ((this.BufferSizeField.Equals(value) != true)) {
                    this.BufferSizeField = value;
                    this.RaisePropertyChanged("BufferSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BytesRead {
            get {
                return this.BytesReadField;
            }
            set {
                if ((this.BytesReadField.Equals(value) != true)) {
                    this.BytesReadField = value;
                    this.RaisePropertyChanged("BytesRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isFinsishFlag {
            get {
                return this.isFinsishFlagField;
            }
            set {
                if ((this.isFinsishFlagField.Equals(value) != true)) {
                    this.isFinsishFlagField = value;
                    this.RaisePropertyChanged("isFinsishFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="netTCPServiceReference.IService1", CallbackContract=typeof(WCFClient.netTCPServiceReference.IService1Callback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        void Register(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SendToOtherClients", ReplyAction="http://tempuri.org/IService1/SendToOtherClientsResponse")]
        void SendToOtherClients(WCFClient.netTCPServiceReference.Person person, string specificClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileList", ReplyAction="http://tempuri.org/IService1/GetFileListResponse")]
        System.Data.DataSet GetFileList(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPic", ReplyAction="http://tempuri.org/IService1/GetPicResponse")]
        byte[] GetPic(string dilePath, string fileName, int offSet, int blockSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReceiveFile", ReplyAction="http://tempuri.org/IService1/ReceiveFileResponse")]
        void ReceiveFile(WCFClient.netTCPServiceReference.ClientFile clientFile, bool isChangeFileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Callback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/SendMessage")]
        void SendMessage(WCFClient.netTCPServiceReference.Person person, int contentType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/UpdateUserList")]
        void UpdateUserList(string[] userList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCFClient.netTCPServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.DuplexClientBase<WCFClient.netTCPServiceReference.IService1>, WCFClient.netTCPServiceReference.IService1 {
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Register(string userName) {
            base.Channel.Register(userName);
        }
        
        public void SendToOtherClients(WCFClient.netTCPServiceReference.Person person, string specificClient) {
            base.Channel.SendToOtherClients(person, specificClient);
        }
        
        public System.Data.DataSet GetFileList(string filePath) {
            return base.Channel.GetFileList(filePath);
        }
        
        public byte[] GetPic(string dilePath, string fileName, int offSet, int blockSize) {
            return base.Channel.GetPic(dilePath, fileName, offSet, blockSize);
        }
        
        public void ReceiveFile(WCFClient.netTCPServiceReference.ClientFile clientFile, bool isChangeFileName) {
            base.Channel.ReceiveFile(clientFile, isChangeFileName);
        }
    }
}
